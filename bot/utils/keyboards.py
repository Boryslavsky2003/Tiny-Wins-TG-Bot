from aiogram.utils.keyboard import InlineKeyboardBuilder

from bot.utils.callback_data import BotCallback

from aiogram.types import (
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButton,
)


def create_admin_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    builder.button(
        text="üìù –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç",
        callback_data=BotCallback(action="create_text_ai").pack(),
    )
    builder.button(
        text="üé® –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è",
        callback_data=BotCallback(action="create_image_ai").pack(),
    )
    builder.button(
        text="–Ü–Ω—à—ñ –∫–æ–º–∞–Ω–¥–∏",
        callback_data=BotCallback(action="other_commands").pack(),
    )

    builder.adjust(2, 1)
    return builder.as_markup()


def create_other_commands_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="ü§ñ –ü—Ä–æ—Ç–µ—Å—Ç—É–≤–∞—Ç–∏ AI-–º–æ–¥–µ–ª—ñ",
                    callback_data=BotCallback(action="test_ai").pack(),
                ),
                InlineKeyboardButton(
                    text="üÜî –û—Ç—Ä–∏–º–∞—Ç–∏ ID",
                    callback_data=BotCallback(action="get_id").pack(),
                ),
            ],
            [
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å",
                    callback_data=BotCallback(action="go_back").pack(),
                )
            ],
        ]
    )


def create_test_keyboard() -> ReplyKeyboardMarkup:
    faq_keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–©–æ —Ä–æ–±–∏—Ç–∏, —è–∫—â–æ —É –º–µ–Ω–µ –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞?")],
            [KeyboardButton(text="‚¨ÖÔ∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é")],
        ],
        resize_keyboard=True,
    )
    return faq_keyboard
